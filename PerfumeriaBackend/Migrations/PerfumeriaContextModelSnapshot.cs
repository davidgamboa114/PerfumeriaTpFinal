// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerfumeriaBackend.DataContext;

#nullable disable

namespace PerfumeriaBackend.Migrations
{
    [DbContext(typeof(PerfumeriaContext))]
    partial class PerfumeriaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PerfumeriaServices.Models.AreaDeVenta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("pAreasDeVenta");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsDeleted = false,
                            Nombre = "Perfumes"
                        });
                });

            modelBuilder.Entity("PerfumeriaServices.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("pClientes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Correo = "ana.gomez@example.com",
                            IsDeleted = false,
                            Nombre = "Ana Gómez",
                            Telefono = "1112223333"
                        });
                });

            modelBuilder.Entity("PerfumeriaServices.Models.MetodoDePago", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("pMetodosDePago");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsDeleted = false,
                            Nombre = "Efectivo"
                        });
                });

            modelBuilder.Entity("PerfumeriaServices.Models.Producto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AreaVentaId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("AreaVentaId");

                    b.ToTable("pProductos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AreaVentaId = 1L,
                            IsDeleted = false,
                            Nombre = "Perfume Chanel N°5",
                            Precio = 120.50m
                        });
                });

            modelBuilder.Entity("PerfumeriaServices.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contraseña = "123456",
                            Email = "admin@example.com",
                            IsDeleted = false,
                            NombreUsuario = "admin",
                            TipoUsuario = 1
                        });
                });

            modelBuilder.Entity("PerfumeriaServices.Models.Venta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("MetodoPagoId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("pVentas");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Cantidad = 2,
                            ClienteId = 1L,
                            Fecha = new DateTime(2024, 12, 18, 3, 5, 8, 535, DateTimeKind.Utc).AddTicks(2303),
                            IsDeleted = false,
                            MetodoPagoId = 1L,
                            ProductoId = 1L
                        });
                });

            modelBuilder.Entity("PerfumeriaServices.Models.Producto", b =>
                {
                    b.HasOne("PerfumeriaServices.Models.AreaDeVenta", "AreaDeVenta")
                        .WithMany()
                        .HasForeignKey("AreaVentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaDeVenta");
                });

            modelBuilder.Entity("PerfumeriaServices.Models.Venta", b =>
                {
                    b.HasOne("PerfumeriaServices.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerfumeriaServices.Models.MetodoDePago", "MetodoDePago")
                        .WithMany()
                        .HasForeignKey("MetodoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerfumeriaServices.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("MetodoDePago");

                    b.Navigation("Producto");
                });
#pragma warning restore 612, 618
        }
    }
}
